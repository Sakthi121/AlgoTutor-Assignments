/*Problem Description
Given an even number A ( greater than 2 ), return two prime numbers whose sum will be
equal to the given number.
If there is more than one solution possible, return the lexicographically smaller solution.
If [a, b] is one solution with a <= b, and [c,d] is another
solution with c <= d, then
[a, b] < [c, d], If a < c OR a==c AND b < d.
NOTE: A solution will always exist. Read Goldbach's conjecture.
Problem Constraints
4 <= A <= 2*107
Input Format
First and only argument of input is an even number A.
Output Format
Return a integer array of size 2 containing primes whose sum will be equal to given
number.
Example Input
4
Example Output
[2, 2]
Example Explanation
There is only 1 solution for A = 4.
*/


import java.util.*;
class Main{
	static boolean SieveOfEratosthenes(int n, boolean hash[]){
	hash[0] = hash[1] = false;
	for (int i = 2; i <= n; i++)   hash[i] = true;
    for (int p = 2; p * p <= n; p++) {
			if (hash[p] == true) {
			for (int i = p * p; i <= n; i += p)  hash[i] = false;}}
	return false;
	}

	public static void main(String[] args){
	
		Scanner sc=new Scanner(System.in);
		int n=sc.nextInt();
		boolean hash[] = new boolean[n + 1];
		SieveOfEratosthenes(n, hash);
         for (int i = 0; i < n; i++) {
			if (hash[i] && hash[n - i]) {
				System.out.print(i + " " + (n - i));
				return;
			}
		}
	}


}
